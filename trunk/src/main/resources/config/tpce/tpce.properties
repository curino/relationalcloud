
###################################################
#                                                 #  
#     relationalcloud.com configuration script    #
#                                                 # 
###################################################


######### DBMS connection configuration ###########
driver=com.mysql.jdbc.Driver
mysql_conn=jdbc:mysql://localhost:3307/tpce
conn=jdbc:mysql://localhost:3307/tpce
information_schema_connection=jdbc:mysql://localhost:3307/informationSchema
user=tpce
password=tpce
schemaname=tpce

########### QUERY_LOG LOADER #####################
querylog_file=/data/tpcc/hammer.tail
autocommit_prop=false
# this is used to start from a certain point on
initial_thread_id=0
# this parameter control how many transactions will be processed
# this limits both the query load and the transactions2transactionlog phase
numb_trans_to_process=10000
log2txns.tail=false
inserter.nconns=10

########### TRANSACTIONS TO TRANSACTIONLOG ####### 
# the file containing the sql for the extra tables we need
metaSchemaFile=./meta_schema.sql
blanketfilter.mintablesize=30
# NOTE: setting mincount and maxcount to the same value transform the filter to a 
# hard threshold, and does not compute ratios with the table size
# this is useful to avoid cases in which the joins without WHERE clause are too slow
BlanketFilter.maxCount=100
BlanketFilter.minCount=100
BlanketFilter.threshold=0.1

################ TRANSACTIONLOG SAMPLING ######### 
# transaction-level sampling
# ATTENTION the resulting number of transactions must match the numb_trans_to_process
SampleTransactionlog.trainingSetSize=10000
SampleTransactionlog.testSetSize=10000

#tuple=level sampling
SampleTransactionlog.minTuplesPerTable=10
SampleTransactionlog.samplingRatio=0.2

############# SCHEMA EXTENSIONS ##################
viewPrefix=relcloud_
#initial table holding transactions
txnLogTable=metarelcloud_transactions
# initial table holding the large read/write sets for transaction 
accessLogTable=metarelcloud_transactionlog
# the table from which we do tuple-sampling
trainingAccessLogTable=metarelcloud_training_transactionlog
# the table used for testing the final result of partitioning
testingAccessLogTable=metarelcloud_testing_transactionlog
# the table on which we run the partitioning
sampledAccessLogTable=metarelcloud_training_transactionlog

graphtable_name=metarelcloud_graph
repgraphtable_name=metarelcloud_repgraph
graphsupporttable_name=metarelcloud_graphsupport
repgraphsupporttable_name=metarelcloud_repgraphsupport
tempparttable_name=metarelcloud_temporary_partition
generalQueryLog=metarelcloud_general_log

graphPartitionCol=graphpartition
replicatedPartitionCol=replicatedpartition
explainedPartitionCol=justifiedpartition
hashPartitionCol=hashpartition
manualPartitionCol=manualpartition

############### METIS FILES #######################                                               
hypergraph_file=/home/curino/hypergraph.txt
graphFile=/home/curino/tpce_graph.txt
partitionfile=/home/curino/tpce_graph.txt.part.2
numPartitions=2
useWeights=true
partitioningMethod=repGraph

############ REPLICATION PREDICTION ##############
replication_part_id=2

############JUSTIFICATION PARAMETER##############
dbPropertyFile=../config/WekaHelper.props
populate_justification_column=true
j48_sampling_threshold=5000
j48_confidence=0.1
correlationThreshold=0.3

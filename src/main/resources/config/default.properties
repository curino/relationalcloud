
###################################################
#                                                 #  
#     relationalcloud.com configuration script    #
#                                                 # 
###################################################


######### DBMS connection configuration ###########

driver=com.mysql.jdbc.Driver
conn=jdbc:mysql://localhost:3306/
schema=mydb
queryLogSchema=mysql
informationSchema=information_schema
user=root
password=

########### SCHEMA PREPARATION #####################

# where is the SQL file loading the schema extensions?
metaSchemaFile=./meta_schema.sql

########### QUERY_LOG LOADER #####################

# this parameter control how many transactions will be processed
# this limits both the query load and the transactions2transactionlog phase
inserter.nconns=10

########### TRANSACTIONS TO TRANSACTIONLOG ####### 

# this controls the number of transactions that will be processed 
#(i.e., for which we compute read/write sets) from the transactions 
Transactions2TransactionLog.numTransactionsToProcess=30000

# the file containing the sql for the extra tables we need
BlanketFilter.minTableSize=30

# NOTE: setting mincount and maxcount to the same value transform the filter to a 
# hard threshold, and does not compute ratios with the table size
# this is useful to avoid cases in which the joins without WHERE clause are too slow
BlanketFilter.maxCount=100
BlanketFilter.minCount=100
BlanketFilter.threshold=0.1

################ TRANSACTIONLOG SAMPLING ######### 

# transaction-level sampling
SampleTransactionlog.trainingSetSize=20000
SampleTransactionlog.testSetSize=10000

#tuple-level sampling parameters
SampleTransactionlog.minTuplesPerTable=20
SampleTransactionlog.samplingRatio=0.1

############# SCHEMA EXTENSIONS ##################

# this table contains the initial mysql general_log trace
generalQueryLog=metarelcloud_general_query_log

# this is the prefix to be used to create views on top of the original tables
viewPrefix=relcloud_

#initial table holding transactions
txnLogTable=metarelcloud_txn_log

# initial table holding the large read/write sets for transaction 
accessLogTable=metarelcloud_access_log

# the table from which we do tuple-sampling
trainingAccessLogTable=metarelcloud_training_access_log

# the table used for testing the final result of partitioning
testingAccessLogTable=metarelcloud_testing_access_log

# the table on which we run the partitioning
sampledAccessLogTable=metarelcloud_sampledtraining_access_log

# this is a temporary table where we load results of the file-based graph partitioning
partitioningTable=metarelcloud_partitioning

#this table is created temporarily to compute the replication column
tmpRepTable=metarelcloud_tmp_rep

# the following tables are used to store the graph representation and its metadata
graphTable=metarelcloud_graph
repGraphTable=metarelcloud_rep_graph
graphSupportTable=metarelcloud_graph_support
repGraphSupportTable=metarelcloud_rep_graph_support

# these are the columns used in the access_log tables to store partitioning strategies
graphPartitionCol=graphpartition
replicatedPartitionCol=replicatedpartition
explainedPartitionCol=explainedpartition
hashPartitionCol=hashpartition
manualPartitionCol=manualpartition

############### METIS FILES #######################                                  

# these are the configuration parameters used to drive the METIS graph partitioner             
graphFile=/tmp/graph.txt

numPartitions=2
useWeights=false
partitioningMethod=repGraph

############ REPLICATION PREDICTION ##############

#controls how balanced should be the use of a tuple across multiple partitions before we use replication. 
maxReplicationSkew=0.6

#the id assigned to the virtual partition representing replication, must be higher than numPartitions
repPartitionId=2

############ EXPLANATION PARAMETERS ##############

# this are the parameters used to configure the Weka-based explanation phase
dbPropertyFile=../../resources/config/WekaHelper.props
Explanation.numTxnsToExtractTemplates=2000
Explanation.j48SamplingThreshold=2000
Explanation.j48PruningConfidence=c


Explanation.populateExplainedColumn=true
Explanation.populateHashColumn=true
Explanation.populateReplicatedColumn=true

Explanation.populateTraining=true
Explanation.defaultReplicate=true

# instruct a rank-based attribute selection component to retain at most X attributes
Explanation.maxNumberOfAttribute=2


############ RENDERING PARAMETERS ##############
Rendering.graphvizFile=/tmp/graph.dot
Rendering.nodeShape=circle
Rendering.tableToRender=metarelcloud_testing_access_log
Rendering.columnToRender=explainedpartition

